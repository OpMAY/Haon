<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.FarmMapper">
    <resultMap id="farm" type="com.model.farm.Farm">
        <result column="profile_image" property="profile_image" javaType="com.model.common.MFile"
                typeHandler="JsonObjectTypeHandler"/>
        <result column="farm_image" property="farm_image" javaType="com.model.common.MFile"
                typeHandler="JsonObjectTypeHandler"/>
        <result column="hashtag" property="hashtag"
                typeHandler="StringArrayListTypeHandler"/>
        <result column="sns" property="sns" typeHandler="JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getMainFarms" resultType="Farm" resultMap="farm">
        select *
        from farm
        order by rand()
        LIMIT 8
    </select>
    <select id="getFarm" parameterType="int" resultType="boolean">
        SELECT EXISTS(SELECT * FROM farm WHERE user_no = #{user_no});
    </select>
    <insert id="insertFarm" parameterType="Farm" keyProperty="no" useGeneratedKeys="true">
        insert into farm(user_no, `name`, type,
                         profile_image, farm_image,
                         `description`, hashtag, sns)
        values (#{user_no}, #{name}, #{type},
                #{profile_image, typeHandler=JsonObjectTypeHandler},
                #{farm_image, typeHandler=JsonObjectTypeHandler},
                #{description}, null, null);
    </insert>
    <select id="getFarmByUserNo" parameterType="int" resultType="Farm" resultMap="farm">
        select *
        from farm
        where user_no = #{user_no}
    </select>

    <select id="getFarmByFarmNo" parameterType="int" resultType="Farm" resultMap="farm">
        select *
        from farm
        where no = #{farm_no}
    </select>
    <select id="isFarmBookmark" resultType="boolean">
        SELECT IF(EXISTS(
                          SELECT *
                          FROM farm_bookmark
                          WHERE farm_no = #{farm_no}
                            and user_no = #{user_no}), true, false)
    </select>

    <select id="getFarmByNo" resultType="Farm" resultMap="farm">
        select *
        from farm
        WHERE no = #{farm_no}
    </select>
    <select id="getCommunityFarmsOrderByRecent" resultType="Farm" resultMap="farm">
        select *
        from farm
        WHERE no != 0
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by reg_datetime DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getCommunityFarmsOrderByViews" resultType="Farm" resultMap="farm">
        select *
        from farm
        WHERE no != 0
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by views DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getCommunityFarmsOrderByBookmarks" resultType="Farm" resultMap="farm">
        select *, (select COUNT(*) from farm_bookmark WHERE farm_no = farm.no) as bookmark_count
        from farm
        WHERE no != 0
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by bookmark_count DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getCommunityFarmsOrderByRecentReload" resultType="Farm" resultMap="farm">
        SET @LAST_DATETIME = (select reg_datetime
        from farm
        WHERE no = #{content_no});
        select *
        from farm
        WHERE no != 0
        AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND farm.no
        <![CDATA[<]]> #{content_no}))
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by reg_datetime DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getCommunityFarmsOrderByViewsReload" resultType="Farm" resultMap="farm">
        SET @LAST_VIEWS = (select views
        from farm
        WHERE no = #{content_no});
        select *
        from farm
        WHERE no != 0
        AND (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND farm.no
        <![CDATA[<]]> #{content_no}))
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by views DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getCommunityFarmsOrderByBookmarksReload" resultType="Farm" resultMap="farm">
        SET @LAST_BOOKMARKS = (select COUNT(*)
        from farm_bookmark
        WHERE farm_no = #{content_no});
        select *, (select COUNT(*) from farm_bookmark WHERE farm_no = farm.no) as bookmark_count
        from farm
        WHERE no != 0
        AND ((select COUNT(*) from farm_bookmark WHERE farm_no = farm.no) <![CDATA[<]]> @LAST_BOOKMARKS OR
        ((select COUNT(*) from farm_bookmark WHERE farm_no = farm.no) = @LAST_BOOKMARKS AND
        farm.no <![CDATA[<]]> #{content_no}))
        <if test="farm_type != null">AND farm.type = #{farm_type}</if>
        order by bookmark_count DESC, farm.no DESC
        LIMIT 4
    </select>
    <select id="getFarmSearchResult" resultType="Farm" resultMap="farm">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from farm WHERE no = #{last_content_no});
        </if>
        select * from farm
        WHERE name like @QUERY
        OR farm.hashtag like @QUERY
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <update id="updateFarmDescription">
        update farm
        set description=#{description}
        where no = #{farm_no};
    </update>
    <update id="updateFarmSns">
        update farm
        set sns=#{farmSns, typeHandler=JsonObjectTypeHandler}
        where no = #{farm_no};
    </update>
    <update id="updateFarmName">
        update farm
        set name=#{name}
        where no = #{farm_no};
    </update>
    <update id="updateFarmHashtag">
        update farm
        set hashtag=#{hashs, typeHandler=StringArrayListTypeHandler}
        where no = #{farm_no}
    </update>
    <update id="updateFarmProfile">
        update farm
        set profile_image=#{profile, typeHandler=JsonObjectTypeHandler}
        where no = #{farm_no}
    </update>
    <update id="updateFarmBanner">
        update farm
        set farm_image=#{banner, typeHandler=JsonObjectTypeHandler}
        where no = #{farm_no}
    </update>
</mapper>