<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.CommentMapper">
    <select id="getBoardComments" resultType="BoardComment" parameterType="int">
        select bc.*,
               bc.no,
               bc.content,
               (select COUNT(*) from board_comment_like WHERE comment_no = bc.no)    as like_count,
               (select COUNT(*) from board_comment_dislike WHERE comment_no = bc.no) as dislike_count
        from board
                 left join board_comment bc on board.no = bc.board_no
        WHERE board.no = #{board_no}
          and bc.recomment is null
          AND bc.no is not null;
    </select>
    <select id="getMagazineComments" resultType="MagazineComment" parameterType="int">
        select mc.*,
               mc.no,
               mc.content,
               (select COUNT(*) from magazine_comment_like WHERE comment_no = mc.no)    as like_count,
               (select COUNT(*) from magazine_comment_dislike WHERE comment_no = mc.no) as dislike_count
        from magazine
                 left join magazine_comment mc on magazine.no = mc.magazine_no
        WHERE magazine.no = #{magazine_no}
          and mc.recomment is null
          AND mc.no is not null;
    </select>
    <select id="getQuestionComments" resultType="QuestionComment" parameterType="int">
        select qc.*,
               qc.no,
               qc.content,
               (select COUNT(*) from question_comment_like WHERE comment_no = qc.no)    as like_count,
               (select COUNT(*) from question_comment_dislike WHERE comment_no = qc.no) as dislike_count
        from question
                 left join question_comment qc on question.no = qc.question_no
        WHERE question.no = #{question_no}
          and qc.recomment is null
          AND qc.no is not null;
    </select>
    <select id="getBoardRecommentByCommentNo" resultType="BoardComment" parameterType="int">
        select *
        from board_comment
        where recomment = #{comment_no};
    </select>
    <select id="getMagazineRecommentByCommentNo" resultType="MagazineComment" parameterType="int">
        select *
        from magazine_comment
        where recomment = #{comment_no};
    </select>
    <select id="getQuestionRecommentByCommentNo" resultType="QuestionComment" parameterType="int">
        select *
        from question_comment
        where recomment = #{comment_no};
    </select>
    <select id="getBestBoardComment" parameterType="int" resultType="BoardComment">
        select board_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM board_comment_like
                where board_comment_like.comment_no = board_comment.no
                GROUP BY comment_no) as count
        from board_comment
        where board_no = #{board_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestMagazineComment" parameterType="int" resultType="MagazineComment">
        select magazine_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM magazine_comment_like
                where magazine_comment_like.comment_no = magazine_comment.no
                GROUP BY comment_no) as count
        from magazine_comment
        where magazine_no = #{magazine_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestQuestionComment" parameterType="int" resultType="QuestionComment">
        select question_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM question_comment_like
                where question_comment_like.comment_no = question_comment.no
                GROUP BY comment_no) as count
        from question_comment
        where question_no = #{question_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <insert id="insertBoardComment" parameterType="BoardComment" keyProperty="no" useGeneratedKeys="true">
        insert into board_comment(user_no, board_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{board_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertMagazineComment" parameterType="MagazineComment" keyProperty="no" useGeneratedKeys="true">
        insert into magazine_comment(user_no, magazine_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{magazine_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertQuestionComment" parameterType="QuestionComment" keyProperty="no" useGeneratedKeys="true">
        insert into question_comment(user_no, question_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{question_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertBoardCommentReply" parameterType="BoardComment" keyProperty="no" useGeneratedKeys="true">
        insert into board_comment(user_no, recomment, board_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{board_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertMagazineCommentReply" parameterType="MagazineComment" keyProperty="no" useGeneratedKeys="true">
        insert into magazine_comment(user_no, recomment, magazine_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{magazine_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertQuestionCommentReply" parameterType="QuestionComment" keyProperty="no" useGeneratedKeys="true">
        insert into question_comment(user_no, recomment, question_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{question_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>

    <select id="getBoardCommentByNo" parameterType="int" resultType="BoardComment">
        select *
        from board_comment
        where no = #{comment_no};
    </select>
    <select id="getMagazineCommentByNo" parameterType="int" resultType="MagazineComment">
        select *
        from magazine_comment
        where no = #{comment_no};
    </select>
    <select id="getQuestionCommentByNo" parameterType="int" resultType="QuestionComment">
        select *
        from question_comment
        where no = #{comment_no};
    </select>
    <update id="deleteBoardCommentByNoAndUserNo">
        update board_comment
        set user_no=null
        where user_no = #{user_no}
          and no = #{comment_no}
    </update>
    <update id="deleteMagazineCommentByNoAndUserNo">
        update magazine_comment
        set user_no=null
        where user_no = #{user_no}
          and no = #{comment_no}
    </update>
    <update id="deleteQuestionCommentByNoAndUserNo">
        update question_comment
        set user_no=null
        where user_no = #{user_no}
          and no = #{comment_no}
    </update>

    <select id="checkQuestionLastCommentExists" resultType="_boolean">
        select EXISTS(select * from question_comment WHERE no = #{last_comment_no})
    </select>
    <select id="getMoreQuestionComments" resultType="QuestionComment">
        SET @LAST_COMMENT_LIKES_COUNT = (select COUNT(*)
                                         from question_comment_like
                                         WHERE comment_no = #{last_comment_no});
        select qc.no,
               qc.question_no,
               qc.content,
               (select COUNT(*) from question_comment_like WHERE comment_no = qc.no) as like_count
        from question_comment qc
        WHERE question_no = #{content_no}
          AND qc.is_blocked = false
          AND recomment is null
          AND ((select COUNT(*) from question_comment_like WHERE comment_no = qc.no) <![CDATA[<]]> @LAST_COMMENT_LIKES_COUNT OR
               ((select COUNT(*) from question_comment_like WHERE comment_no = qc.no) = @LAST_COMMENT_LIKES_COUNT AND
                qc.no <![CDATA[>]]> #{last_comment_no}))
        order by like_count DESC, qc.no
        LIMIT 5;
    </select>
</mapper>