<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.CommentMapper">
    <select id="getBoardComments" resultType="BoardComment" parameterType="int">
        select bc.*,
               bc.no,
               bc.content,
               (select COUNT(*) from board_comment_like WHERE comment_no = bc.no)    as like_count,
               (select COUNT(*) from board_comment_dislike WHERE comment_no = bc.no) as dislike_count
        from board
                 left join board_comment bc on board.no = bc.board_no
        WHERE board.no = #{board_no}
          and bc.recomment is null
          AND bc.no is not null;
    </select>
    <select id="getMagazineComments" resultType="MagazineComment" parameterType="int">
        select mc.*,
               mc.no,
               mc.content,
               (select COUNT(*) from magazine_comment_like WHERE comment_no = mc.no)    as like_count,
               (select COUNT(*) from magazine_comment_dislike WHERE comment_no = mc.no) as dislike_count
        from magazine
                 left join magazine_comment mc on magazine.no = mc.magazine_no
        WHERE magazine.no = #{magazine_no}
          and mc.recomment is null
          AND mc.no is not null;
    </select>
    <select id="getQuestionComments" resultType="QuestionComment" parameterType="int">
        select qc.*,
               qc.no,
               qc.content,
               (select COUNT(*) from question_comment_like WHERE comment_no = qc.no)    as like_count,
               (select COUNT(*) from question_comment_dislike WHERE comment_no = qc.no) as dislike_count
        from question
                 left join question_comment qc on question.no = qc.question_no
        WHERE question.no = #{question_no}
          and qc.recomment is null
          AND qc.no is not null;
    </select>
    <select id="getManualComments" resultType="ManualComment" parameterType="int">
        select mc.*,
               mc.no,
               mc.content,
               (select COUNT(*) from manual_comment_like WHERE comment_no = mc.no)    as like_count,
               (select COUNT(*) from manual_comment_dislike WHERE comment_no = mc.no) as dislike_count
        from manual
                 left join manual_comment mc on manual.no = mc.manual_no
        WHERE manual.no = #{manual_no}
          and mc.recomment is null
          AND mc.no is not null;
    </select>
    <select id="getTipsComments" resultType="TipsComment" parameterType="int">
        select tc.*,
               tc.no,
               tc.content,
               (select COUNT(*) from tips_comment_like WHERE comment_no = tc.no)    as like_count,
               (select COUNT(*) from tips_comment_dislike WHERE comment_no = tc.no) as dislike_count
        from tips
                 left join tips_comment tc on tips.no = tc.tips_no
        WHERE tips.no = #{tips_no}
          and tc.recomment is null
          AND tc.no is not null;
    </select>
    <select id="getFarmComments" resultType="FarmComment" parameterType="int">
        select fc.*,
               fc.no,
               fc.content,
               (select COUNT(*) from farm_comment_like WHERE comment_no = fc.no)    as like_count,
               (select COUNT(*) from farm_comment_dislike WHERE comment_no = fc.no) as dislike_count
        from farm
                 left join farm_comment fc on farm.no = fc.farm_no
        WHERE farm.no = #{farm_no}
          and fc.recomment is null
          AND fc.no is not null;
    </select>
    <select id="getBoardRecommentByCommentNo" resultType="BoardComment" parameterType="int">
        select *
        from board_comment
        where recomment = #{comment_no};
    </select>
    <select id="getMagazineRecommentByCommentNo" resultType="MagazineComment" parameterType="int">
        select *
        from magazine_comment
        where recomment = #{comment_no};
    </select>
    <select id="getQuestionRecommentByCommentNo" resultType="QuestionComment" parameterType="int">
        select *
        from question_comment
        where recomment = #{comment_no};
    </select>
    <select id="getManualRecommentByCommentNo" resultType="ManualComment" parameterType="int">
        select *
        from manual_comment
        where recomment = #{comment_no};
    </select>
    <select id="getTipsRecommentByCommentNo" resultType="TipsComment" parameterType="int">
        select *
        from tips_comment
        where recomment = #{comment_no};
    </select>
    <select id="getFarmRecommentByCommentNo" resultType="FarmComment" parameterType="int">
        select *
        from farm_comment
        where recomment = #{comment_no};
    </select>
    <select id="getBestBoardComment" parameterType="int" resultType="BoardComment">
        select board_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM board_comment_like
                where board_comment_like.comment_no = board_comment.no
                GROUP BY comment_no) as count
        from board_comment
        where board_no = #{board_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestMagazineComment" parameterType="int" resultType="MagazineComment">
        select magazine_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM magazine_comment_like
                where magazine_comment_like.comment_no = magazine_comment.no
                GROUP BY comment_no) as count
        from magazine_comment
        where magazine_no = #{magazine_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestQuestionComment" parameterType="int" resultType="QuestionComment">
        select question_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM question_comment_like
                where question_comment_like.comment_no = question_comment.no
                GROUP BY comment_no) as count
        from question_comment
        where question_no = #{question_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestManualComment" parameterType="int" resultType="ManualComment">
        select manual_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM manual_comment_like
                where manual_comment_like.comment_no = manual_comment.no
                GROUP BY comment_no) as count
        from manual_comment
        where manual_no = #{manual_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestTipsComment" parameterType="int" resultType="TipsComment">
        select tips_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM tips_comment_like
                where tips_comment_like.comment_no = tips_comment.no
                GROUP BY comment_no) as count
        from tips_comment
        where tips_no = #{tips_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <select id="getBestFarmComment" parameterType="int" resultType="FarmComment">
        select farm_comment.*,
               (SELECT COUNT(comment_no) AS cnt
                FROM farm_comment_like
                where farm_comment_like.comment_no = farm_comment.no
                GROUP BY comment_no) as count
        from farm_comment
        where farm_no = #{farm_no}
          and recomment is null
        order by count desc
        limit 1;
    </select>
    <insert id="insertBoardComment" parameterType="BoardComment" keyProperty="no" useGeneratedKeys="true">
        insert into board_comment(user_no, board_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{board_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertMagazineComment" parameterType="MagazineComment" keyProperty="no" useGeneratedKeys="true">
        insert into magazine_comment(user_no, magazine_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{magazine_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertQuestionComment" parameterType="QuestionComment" keyProperty="no" useGeneratedKeys="true">
        insert into question_comment(user_no, question_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{question_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertManualComment" parameterType="ManualComment" keyProperty="no" useGeneratedKeys="true">
        insert into manual_comment(user_no, manual_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{manual_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertTipsComment" parameterType="TipsComment" keyProperty="no" useGeneratedKeys="true">
        insert into tips_comment(user_no, tips_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{tips_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertFarmComment" parameterType="FarmComment" keyProperty="no" useGeneratedKeys="true">
        insert into farm_comment(user_no, farm_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{farm_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertBoardCommentReply" parameterType="BoardComment" keyProperty="no" useGeneratedKeys="true">
        insert into board_comment(user_no, recomment, board_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{board_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertMagazineCommentReply" parameterType="MagazineComment" keyProperty="no" useGeneratedKeys="true">
        insert into magazine_comment(user_no, recomment, magazine_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{magazine_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertQuestionCommentReply" parameterType="QuestionComment" keyProperty="no" useGeneratedKeys="true">
        insert into question_comment(user_no, recomment, question_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{question_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertManualCommentReply" parameterType="ManualComment" keyProperty="no" useGeneratedKeys="true">
        insert into manual_comment(user_no, recomment, manual_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{manual_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertTipsCommentReply" parameterType="TipsComment" keyProperty="no" useGeneratedKeys="true">
        insert into tips_comment(user_no, recomment, tips_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{tips_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>
    <insert id="insertFarmCommentReply" parameterType="FarmComment" keyProperty="no" useGeneratedKeys="true">
        insert into farm_comment(user_no, recomment, farm_no, content, reg_datetime, is_blocked, owner_checked)
        VALUES (#{user_no}, #{recomment}, #{farm_no}, #{content}, now(), #{is_blocked}, #{owner_checked})
    </insert>

    <select id="getBoardCommentByNo" parameterType="int" resultType="BoardComment">
        select *, board_comment.board_no as community_no
        from board_comment
        where no = #{comment_no};
    </select>
    <select id="getMagazineCommentByNo" parameterType="int" resultType="MagazineComment">
        select *, magazine_comment.magazine_no as community_no
        from magazine_comment
        where no = #{comment_no};
    </select>
    <select id="getQuestionCommentByNo" parameterType="int" resultType="QuestionComment">
        select *, question_comment.question_no as community_no
        from question_comment
        where no = #{comment_no};
    </select>
    <select id="getManualCommentByNo" parameterType="int" resultType="ManualComment">
        select *, manual_comment.manual_no as community_no
        from manual_comment
        where no = #{comment_no};
    </select>
    <select id="getTipsCommentByNo" parameterType="int" resultType="TipsComment">
        select *, tips_comment.tips_no as community_no
        from tips_comment
        where no = #{comment_no};
    </select>
    <select id="getFarmCommentByNo" parameterType="int" resultType="FarmComment">
        select *, farm_comment.farm_no as community_no
        from farm_comment
        where no = #{comment_no};
    </select>

    <update id="deleteBoardCommentByNoAndUserNo">
        update board_comment
        set user_no=null
        where no = #{comment_no}
    </update>
    <update id="deleteMagazineCommentByNoAndUserNo">
        update magazine_comment
        set user_no=null
        where no = #{comment_no}
    </update>
    <update id="deleteQuestionCommentByNoAndUserNo">
        update question_comment
        set user_no=null
        where no = #{comment_no}
    </update>
    <update id="deleteManualCommentByNoAndUserNo">
        update manual_comment
        set user_no=null
        where user_no = #{user_no}
          and no = #{comment_no}
    </update>
    <update id="deleteTipsCommentByNoAndUserNo">
        update tips_comment
        set user_no=null
        where no = #{comment_no}
    </update>
    <update id="deleteFarmCommentByNoAndUserNo">
        update farm_comment
        set user_no=null
        where no = #{comment_no}
    </update>

    <select id="checkQuestionLastCommentExists" resultType="_boolean">
        select EXISTS(select * from question_comment WHERE no = #{last_comment_no})
    </select>
    <select id="getMoreQuestionComments" resultType="QuestionComment">
        SET @LAST_COMMENT_LIKES_COUNT = (select COUNT(*)
                                         from question_comment_like
                                         WHERE comment_no = #{last_comment_no});
        select qc.no,
               qc.question_no,
               qc.content,
               (select COUNT(*) from question_comment_like WHERE comment_no = qc.no) as like_count
        from question_comment qc
        WHERE question_no = #{content_no}
          AND qc.is_blocked = false
          AND recomment is null
          AND ((select COUNT(*) from question_comment_like WHERE comment_no = qc.no) <![CDATA[<]]>
               @LAST_COMMENT_LIKES_COUNT OR
               ((select COUNT(*) from question_comment_like WHERE comment_no = qc.no) = @LAST_COMMENT_LIKES_COUNT AND
                qc.no <![CDATA[>]]> #{last_comment_no}))
        order by like_count DESC, qc.no
        LIMIT 5;
    </select>
    <select id="boardOwnerCheck" parameterType="int" resultType="boolean">
        select IF(EXISTS(
                          select *
                          from board_comment
                          WHERE board_no = #{board_no}
                            AND owner_checked = false),
                  true, false);
    </select>
    <select id="tipOwnerCheck" parameterType="int" resultType="boolean">
        select IF(EXISTS(
                          select *
                          from tips_comment
                          WHERE tips_no = #{tips_no}
                            AND owner_checked = false),
                  true, false);
    </select>
    <select id="manualOwnerCheck" parameterType="int" resultType="boolean">
        select IF(EXISTS(
                          select *
                          from manual_comment
                          WHERE manual_no = #{manual_no}
                            AND owner_checked = false),
                  true, false);
    </select>
    <select id="questionOwnerCheck" parameterType="int" resultType="boolean">
        select IF(EXISTS(
                          select *
                          from question_comment
                          WHERE question_no = #{question_no}
                            AND owner_checked = false),
                  true, false);
    </select>
    <select id="getCommentsMadeMe" parameterType="int" resultType="Comment">
        select *
        from (select no, content, 'BOARD' as type, board_no as community_no, reg_datetime, recomment
              from board_comment
              WHERE user_no = #{user_no}
              UNION
              select no, content, 'QUESTION' as type, question_no as community_no, reg_datetime, recomment
              from question_comment
              WHERE user_no = #{user_no}
              UNION
              select no, content, 'FARM' as type, farm_no as community_no, reg_datetime, recomment
              from farm_comment
              WHERE user_no = #{user_no}
              UNION
              select no, content, 'MAGAZINE' as type, magazine_no as community_no, reg_datetime, recomment
              from magazine_comment
              WHERE user_no = #{user_no}
              UNION
              select no, content, 'MANUAL' as type, manual_no as community_no, reg_datetime, recomment
              from manual_comment
              WHERE user_no = #{user_no}
              UNION
              select no, content, 'TIP' as type, tips_no as community_no, reg_datetime, recomment
              from tips_comment
              WHERE user_no = #{user_no}) as bcqc
        ORDER BY reg_datetime desc;
    </select>
    <select id="getCommentsByMe" parameterType="int" resultType="Comment">
        select *
        from (select board_comment.no,
                     board_comment.content,
                     board_comment.user_no,
                     'BOARD'                as type,
                     board_comment.board_no as community_no,
                     board_comment.reg_datetime
              from board_comment
                       inner join board as b on b.no = board_comment.board_no and b.farm_no = #{farm_no}
              where board_comment.recomment is null
              UNION
              select question_comment.no,
                     question_comment.content,
                     question_comment.user_no,
                     'QUESTION'                   as type,
                     question_comment.question_no as community_no,
                     question_comment.reg_datetime
              from question_comment
                       inner join question as q on q.no = question_comment.question_no and q.farm_no = #{farm_no}
              where question_comment.recomment is null
              UNION
              select farm_comment.no,
                     farm_comment.content,
                     farm_comment.user_no,
                     'FARM'               as type,
                     farm_comment.farm_no as community_no,
                     farm_comment.reg_datetime
              from farm_comment
                       inner join farm as f on f.no = farm_comment.farm_no and f.no = #{farm_no}
              where farm_comment.recomment is null
              UNION
              select manual_comment.no,
                     manual_comment.content,
                     manual_comment.user_no,
                     'MANUAL'                 as type,
                     manual_comment.manual_no as community_no,
                     manual_comment.reg_datetime
              from manual_comment
                       inner join manual as m on m.no = manual_comment.manual_no and m.farm_no = #{farm_no}
              where manual_comment.recomment is null
              UNION
              select tips_comment.no,
                     tips_comment.content,
                     tips_comment.user_no,
                     'TIP'                as type,
                     tips_comment.tips_no as community_no,
                     tips_comment.reg_datetime
              from tips_comment
                       inner join tips as t on t.no = tips_comment.tips_no and t.farm_no = #{farm_no}
              where tips_comment.recomment is null) as bcqc
        ORDER BY reg_datetime desc;
    </select>
    <select id="getRecommentByCommentNo" parameterType="Comment" resultType="Comment">
        <choose>
            <when test='type.name().equals("BOARD")'>
                select * from board_comment where recomment=#{no}
            </when>
            <when test='type.name().equals("QUESTION")'>
                select * from question_comment where recomment=#{no}
            </when>
            <when test='type.name().equals("TIP")'>
                select * from tips_comment where recomment=#{no}
            </when>
            <when test='type.name().equals("MANUAL")'>
                select * from manual_comment where recomment=#{no}
            </when>
            <when test='type.name().equals("FARM")'>
                select * from farm_comment where recomment=#{no}
            </when>
        </choose>
    </select>
</mapper>