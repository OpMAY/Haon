<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BundleTracesMapper">
    <resultMap id="Trace" type="com.model.farm.trace.Trace">
        <result property="entity" column="entity" javaType="com.model.farm.trace.TraceEntity"
                typeHandler="JsonObjectTypeHandler"/>
        <result property="breed" column="breed" javaType="com.model.farm.trace.TraceBreed"
                typeHandler="JsonArrayObjectTypeHandler"/>
        <result property="butchery" column="butchery" javaType="com.model.farm.trace.TraceButchery"
                typeHandler="JsonArrayObjectTypeHandler"/>
        <result property="process" column="process" javaType="com.model.farm.trace.TraceProcess"
                typeHandler="JsonArrayObjectTypeHandler"/>
    </resultMap>
    <select id="getBundleTraces" resultType="Trace" resultMap="Trace">
        select *
        from trace
        WHERE no in (select trace_no from bundle_traces WHERE bundle_no = #{bundle_no})
    </select>
    <select id="checkTraceHasBundle" resultType="_boolean">
        select EXISTS(select * from bundle_traces WHERE trace_no = #{trace_no})
    </select>
    <insert id="connectBundleTrace">
        insert into bundle_traces(bundle_no, trace_no)
        VALUES (#{bundle_no}, #{trace_no})
    </insert>
    <delete id="resetBundleTraces">
        delete
        from bundle_traces
        WHERE bundle_no = #{bundle_no}
    </delete>
    <delete id="disconnectTraceBundle">
        delete
        from bundle_traces
        where trace_no = #{trace_no}
          AND bundle_no = #{bundle_no};
    </delete>
    <select id="checkBundleAbleToDisconnect" resultType="_boolean">
        select COUNT(*) > 2
        from bundle_traces
        WHERE bundle_no = #{bundle_no}
    </select>
    <select id="getNewDashboardTraces" resultType="DashBoardTrace">
        select *
        from (select trace_code         as code,
                     u.name             as name,
                     f.name             as farm_name,
                     false              as is_bundle,
                     f.type             as type,
                     trace.reg_datetime as reg_datetime
              from trace
                       left join farm f on trace.farm_no = f.no
                       left join user u on f.user_no = u.no
              UNION
              select bundle_code         as code,
                     u.name              as name,
                     f.name              as farm_name,
                     true                as is_bundle,
                     f.type              as type,
                     bundle.reg_datetime as reg_datetime
              from bundle
                       left join farm f on bundle.farm_no = f.no
                       left join user u on f.user_no = u.no) as tcbc
        ORDER BY reg_datetime
        LIMIT 6
    </select>
</mapper>