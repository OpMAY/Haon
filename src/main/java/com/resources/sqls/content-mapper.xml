<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.ContentMapper">
    <resultMap id="contentForm" type="com.model.content.common.ContentForm">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Tips" type="com.model.content.tips.Tips">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Manual" type="com.model.content.manual.Manual">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Magazine" type="com.model.content.magazine.Magazine">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Question" type="com.model.content.question.Question">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="QuestionSummary" type="com.model.content.question.QuestionSummary">
        <result column="question" property="question" javaType="com.model.content.question.Question"
                typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getLiveBoards" resultType="Board">
        select *
        from board
        ORDER BY reg_datetime DESC
        LIMIT 16
    </select>
    <select id="getMainTips" resultType="Tips" resultMap="Tips">
        select *
        from tips
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainManuals" resultType="Manual" resultMap="Manual">
        select *
        from manual
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainMagazines" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        WHERE is_show = true
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainQuestions" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
                       'no', q.no,
                       'farm_no', q.farm_no,
                       'title', q.title,
                       'content', q.content,
                       'thumbnail', q.thumbnail) as question,
               q.reg_datetime,
               (select cl.content
                from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
                      from question_comment
                               left join question_comment_like qcl on question_comment.no = qcl.comment_no
                      WHERE question_no = q.no
                      ORDER BY likes DESC, no) as cl
                LIMIT 1)                         as best_comment,
               (select cl.no
                from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
                      from question_comment
                               left join question_comment_like qcl on question_comment.no = qcl.comment_no
                      WHERE question_no = q.no
                      ORDER BY likes DESC, no) as cl
                LIMIT 1)                         as best_comment_no
        from question as q
        ORDER BY reg_datetime DESC
        LIMIT 8
    </select>
    <select id="getBoard" parameterType="int" resultType="Board">
        select *
        from board
        where no = #{board_no};
    </select>
    <update id="updateBoardViews">
        update board
        SET views = views + 1
        WHERE board.no = #{board_no}
    </update>
    <update id="updateMagazineViews">
        update magazine
        SET views = views + 1
        WHERE magazine.no = #{magazine_no}
    </update>
    <update id="updateQuestionViews">
        update question
        SET views = views + 1
        WHERE question.no = #{question_no}
    </update>
    <update id="updateTipViews">
        update tips
        SET views = views + 1
        WHERE tips.no = #{tip_no}
    </update>
    <update id="updateManualViews">
        update manual
        SET views = views + 1
        WHERE manual.no = #{manual_no}
    </update>
    <select id="checkQuestionContentExists" resultType="_boolean">
        select EXISTS(select * from question WHERE no = #{question_no})
    </select>
    <select id="getBoards" resultType="Board">
        select *
        from board
        where farm_no = #{farm_no}
    </select>
    <select id="getAllBoards" resultType="Board">
        select *
        from board
        order by reg_datetime desc;
    </select>
    <select id="getBookmarkBoards" parameterType="int" resultType="Board">
        select *
        from board
                 inner join board_bookmark as bb on bb.user_no = #{user_no}
        where board.no = bb.board_no;
    </select>
    <select id="getFameBoards" resultType="Board">
        select *, COUNT(bl.board_no) as cnt
        from board as b
                 inner join board_like as bl on bl.board_no = b.no
        where b.farm_no = #{farm_no}
        group by bl.board_no, b.views
        order by cnt desc, b.views desc
    </select>
    <select id="getMagazine" parameterType="int" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        where no = #{magazine_no}
          AND is_show = true;
    </select>
    <select id="getBookmarkMagazines" parameterType="int" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
                 inner join magazine_bookmark mb on mb.user_no = #{user_no}
        where magazine.no = mb.magazine_no
          AND is_show = true;
    </select>
    <select id="getFameMagazines" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        where is_show = 1
        order by views desc;
    </select>
    <select id="getQuestion" parameterType="int" resultType="Question" resultMap="Question">
        select *
        from question
        where no = #{question_no};
    </select>
    <select id="getFameQuestions" resultType="Question" resultMap="Question">
        select *, COUNT(ql.question_no) as cnt
        from question as q
                 inner join question_like as ql on ql.question_no = q.no
        where q.farm_no = #{farm_no}
        group by ql.question_no, q.views
        order by cnt desc, q.views desc
    </select>
    <select id="getQuestions" resultType="Question" resultMap="Question">
        select *
        from question
        where farm_no = #{farm_no}
    </select>
    <select id="getAllQuestions" resultType="Question" resultMap="Question">
        select *
        from question
        order by reg_datetime desc;
    </select>
    <select id="getBookmarkQuestions" parameterType="int" resultType="Question" resultMap="Question">
        select *
        from question
                 inner join question_bookmark as qb on qb.user_no = #{user_no}
        where question.no = qb.question_no;
    </select>
    <select id="getManual" parameterType="int" resultType="Manual" resultMap="Manual">
        select *
        from manual
        where no = #{manual_no};
    </select>
    <select id="getManuals" resultType="Manual" resultMap="Manual">
        select *
        from manual
        where farm_no = #{farm_no}
    </select>
    <select id="getAllManuals" resultType="Manual" resultMap="Manual">
        select *
        from manual
        order by reg_datetime desc;
    </select>
    <select id="getBookmarkManuals" parameterType="int" resultType="Manual" resultMap="Manual">
        select *
        from manual
                 inner join manual_bookmark as mb on mb.user_no = #{user_no}
        where manual.no = mb.manual_no;
    </select>
    <select id="getTip" resultType="Tips" resultMap="Tips">
        select *
        from tips
        where no = #{tip_no}
    </select>
    <select id="getTips" resultType="Tips" resultMap="Tips">
        select *
        from tips
        where farm_no = #{farm_no}
    </select>
    <select id="getAllTips" resultType="Tips" resultMap="Tips">
        select *
        from tips
        order by reg_datetime desc;
    </select>
    <select id="getBookmarkTips" resultType="Tips" resultMap="Tips" parameterType="int">
        select *
        from tips
                 inner join tips_bookmark tb on tb.user_no = #{user_no}
        where tips.no = tb.tips_no;
    </select>
    <select id="getCommunityBoardsOrderByRecent" resultType="Board">
        select *
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY reg_datetime DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByViews" resultType="Board">
        select *
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY views DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByComments" resultType="Board">
        select *, (select COUNT(*) from board_comment WHERE board_no = board.no) as comment_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY comment_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByLikes" resultType="Board">
        select *, (select COUNT(*) from board_like WHERE board_no = board.no) as like_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY like_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByBookmarks" resultType="Board">
        select *, (select COUNT(*) from board_bookmark WHERE board_no = board.no) as bookmark_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY bookmark_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByRecentReload" resultType="Board">
        SET @LAST_DATETIME = (select reg_datetime from board WHERE no = #{content_no});
        select *
        from board
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByViewsReload" resultType="Board">
        SET @LAST_VIEWS = (select views from board WHERE no = #{content_no});
        select *
        from board
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByCommentsReload" resultType="Board">
        SET @LAST_COMMENTS = (select COUNT(*) from board_comment WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_comment WHERE board_no = board.no) as comment_count
        from board
        WHERE ((select COUNT(*) from board_comment WHERE board_no = board.no) <![CDATA[<]]> @LAST_COMMENTS OR ((select
        COUNT(*) from board_comment WHERE board_no = board.no) = @LAST_COMMENTS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByLikesReload" resultType="Board">
        SET @LAST_LIKES = (select COUNT(*) from board_like WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_like WHERE board_no = board.no) as like_count
        from board
        WHERE ((select COUNT(*) from board_like WHERE board_no = board.no) <![CDATA[<]]> @LAST_LIKES OR ((select
        COUNT(*) from board_like WHERE board_no = board.no) = @LAST_LIKES AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByBookmarksReload" resultType="Board">
        SET @LAST_BOOKMARKS = (select COUNT(*) from board_bookmark WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_bookmark WHERE board_no = board.no) as bookmark_count
        from board
        WHERE ((select COUNT(*) from board_bookmark WHERE board_no = board.no) <![CDATA[<]]> @LAST_BOOKMARKS OR ((select
        COUNT(*) from board_bookmark WHERE board_no = board.no) = @LAST_BOOKMARKS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByRecent" resultType="Tips" resultMap="Tips">
        select *
        from tips
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY reg_datetime DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByViews" resultType="Tips" resultMap="Tips">
        select *
        from tips
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY views DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByComments" resultType="Tips" resultMap="Tips">
        select *, (select COUNT(*) from tips_comment WHERE tips_no = tips.no) as comment_count
        from tips
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY comment_count DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByLikes" resultType="Tips" resultMap="Tips">
        select *, (select COUNT(*) from tips_like WHERE tips_no = tips.no) as like_count
        from tips
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY like_count DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByBookmarks" resultType="Tips" resultMap="Tips">
        select *, (select COUNT(*) from tips_bookmark WHERE tips_no = tips.no) as bookmark_count
        from tips
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY bookmark_count DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByRecentReload" resultType="Tips" resultMap="Tips">
        SET @LAST_DATETIME = (select reg_datetime from tips WHERE no = #{content_no});
        select *
        from tips
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND tips.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByViewsReload" resultType="Tips" resultMap="Tips">
        SET @LAST_VIEWS = (select views from tips WHERE no = #{content_no});
        select *
        from tips
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND tips.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByCommentsReload" resultType="Tips" resultMap="Tips">
        SET @LAST_COMMENTS = (select COUNT(*) from tips_comment WHERE tips_no = #{content_no});
        select *, (select COUNT(*) from tips_comment WHERE tips_no = tips.no) as comment_count
        from tips
        WHERE ((select COUNT(*) from tips_comment WHERE tips_no = tips.no) <![CDATA[<]]> @LAST_COMMENTS OR ((select
        COUNT(*) from tips_comment WHERE tips_no = tips.no) = @LAST_COMMENTS AND tips.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByLikesReload" resultType="Tips" resultMap="Tips">
        SET @LAST_LIKES = (select COUNT(*) from tips_like WHERE tips_no = #{content_no});
        select *, (select COUNT(*) from tips_like WHERE tips_no = tips.no) as like_count
        from tips
        WHERE ((select COUNT(*) from tips_like WHERE tips_no = tips.no) <![CDATA[<]]> @LAST_LIKES OR ((select
        COUNT(*) from tips_like WHERE tips_no = tips.no) = @LAST_LIKES AND tips.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, tips.no DESC LIMIT 4
    </select>
    <select id="getCommunityTipsOrderByBookmarksReload" resultType="Tips" resultMap="Tips">
        SET @LAST_BOOKMARKS = (select COUNT(*) from tips_bookmark WHERE tips_no = #{content_no});
        select *, (select COUNT(*) from tips_bookmark WHERE tips_no = tips.no) as bookmark_count
        from tips
        WHERE ((select COUNT(*) from tips_bookmark WHERE tips_no = tips.no) <![CDATA[<]]> @LAST_BOOKMARKS OR ((select
        COUNT(*) from tips_bookmark WHERE tips_no = tips.no) = @LAST_BOOKMARKS AND tips.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, tips.no DESC LIMIT 4
    </select>

    <select id="getCommunityManualsOrderByRecent" resultType="Manual" resultMap="Manual">
        select *
        from manual
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY reg_datetime DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByViews" resultType="Manual" resultMap="Manual">
        select *
        from manual
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY views DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByComments" resultType="Manual" resultMap="Manual">
        select *, (select COUNT(*) from manual_comment WHERE manual_no = manual.no) as comment_count
        from manual
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY comment_count DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByLikes" resultType="Manual" resultMap="Manual">
        select *, (select COUNT(*) from manual_like WHERE manual_no = manual.no) as like_count
        from manual
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY like_count DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByBookmarks" resultType="Manual" resultMap="Manual">
        select *, (select COUNT(*) from manual_bookmark WHERE manual_no = manual.no) as bookmark_count
        from manual
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY bookmark_count DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByRecentReload" resultType="Manual" resultMap="Manual">
        SET @LAST_DATETIME = (select reg_datetime from manual WHERE no = #{content_no});
        select *
        from manual
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND manual.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByViewsReload" resultType="Manual" resultMap="Manual">
        SET @LAST_VIEWS = (select views from manual WHERE no = #{content_no});
        select *
        from manual
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND manual.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByCommentsReload" resultType="Manual" resultMap="Manual">
        SET @LAST_COMMENTS = (select COUNT(*) from manual_comment WHERE manual_no = #{content_no});
        select *, (select COUNT(*) from manual_comment WHERE manual_no = manual.no) as comment_count
        from manual
        WHERE ((select COUNT(*) from manual_comment WHERE manual_no = manual.no) <![CDATA[<]]> @LAST_COMMENTS OR
        ((select
        COUNT(*) from manual_comment WHERE manual_no = manual.no) = @LAST_COMMENTS AND manual.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByLikesReload" resultType="Manual" resultMap="Manual">
        SET @LAST_LIKES = (select COUNT(*) from manual_like WHERE manual_no = #{content_no});
        select *, (select COUNT(*) from manual_like WHERE manual_no = manual.no) as like_count
        from manual
        WHERE ((select COUNT(*) from manual_like WHERE manual_no = manual.no) <![CDATA[<]]> @LAST_LIKES OR ((select
        COUNT(*) from manual_like WHERE manual_no = manual.no) = @LAST_LIKES AND manual.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, manual.no DESC LIMIT 4
    </select>
    <select id="getCommunityManualsOrderByBookmarksReload" resultType="Manual" resultMap="Manual">
        SET @LAST_BOOKMARKS = (select COUNT(*) from manual_bookmark WHERE manual_no = #{content_no});
        select *, (select COUNT(*) from manual_bookmark WHERE manual_no = manual.no) as bookmark_count
        from manual
        WHERE ((select COUNT(*) from manual_bookmark WHERE manual_no = manual.no) <![CDATA[<]]> @LAST_BOOKMARKS OR
        ((select
        COUNT(*) from manual_bookmark WHERE manual_no = manual.no) = @LAST_BOOKMARKS AND manual.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, manual.no DESC LIMIT 4
    </select>

    <select id="getCommunityMagazinesOrderByRecent" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        WHERE is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByViews" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        WHERE is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByComments" resultType="Magazine" resultMap="Magazine">
        select *, (select COUNT(*) from magazine_comment WHERE magazine_no = magazine.no) as comment_count
        from magazine WHERE is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByLikes" resultType="Magazine" resultMap="Magazine">
        select *, (select COUNT(*) from magazine_like WHERE magazine_no = magazine.no) as like_count
        from magazine WHERE is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByBookmarks" resultType="Magazine" resultMap="Magazine">
        select *, (select COUNT(*) from magazine_bookmark WHERE magazine_no = magazine.no) as bookmark_count
        from magazine WHERE is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByRecentReload" resultType="Magazine" resultMap="Magazine">
        SET @LAST_DATETIME = (select reg_datetime from magazine WHERE no = #{content_no});
        select *
        from magazine
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND magazine.no
        <![CDATA[<]]> #{content_no})) and is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByViewsReload" resultType="Magazine" resultMap="Magazine">
        SET @LAST_VIEWS = (select views from magazine WHERE no = #{content_no});
        select *
        from magazine
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND magazine.no
        <![CDATA[<]]> #{content_no})) and is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByCommentsReload" resultType="Magazine" resultMap="Magazine">
        SET @LAST_COMMENTS = (select COUNT(*) from magazine_comment WHERE magazine_no = #{content_no});
        select *, (select COUNT(*) from magazine_comment WHERE magazine_no = magazine.no) as comment_count
        from magazine
        WHERE ((select COUNT(*) from magazine_comment WHERE magazine_no = magazine.no) <![CDATA[<]]> @LAST_COMMENTS OR
        ((select
        COUNT(*) from magazine_comment WHERE magazine_no = magazine.no) = @LAST_COMMENTS AND magazine.no
        <![CDATA[<]]> #{content_no})) and is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByLikesReload" resultType="Magazine" resultMap="Magazine">
        SET @LAST_LIKES = (select COUNT(*) from magazine_like WHERE magazine_no = #{content_no});
        select *, (select COUNT(*) from magazine_like WHERE magazine_no = magazine.no) as like_count
        from magazine
        WHERE ((select COUNT(*) from magazine_like WHERE magazine_no = magazine.no) <![CDATA[<]]> @LAST_LIKES OR
        ((select
        COUNT(*) from magazine_like WHERE magazine_no = magazine.no) = @LAST_LIKES AND magazine.no
        <![CDATA[<]]> #{content_no})) and is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, magazine.no DESC LIMIT 4
    </select>
    <select id="getCommunityMagazinesOrderByBookmarksReload" resultType="Magazine" resultMap="Magazine">
        SET @LAST_BOOKMARKS = (select COUNT(*) from magazine_bookmark WHERE magazine_no = #{content_no});
        select *, (select COUNT(*) from magazine_bookmark WHERE magazine_no = magazine.no) as bookmark_count
        from magazine
        WHERE ((select COUNT(*) from magazine_bookmark WHERE magazine_no = magazine.no) <![CDATA[<]]> @LAST_BOOKMARKS OR
        ((select
        COUNT(*) from magazine_bookmark WHERE magazine_no = magazine.no) = @LAST_BOOKMARKS AND magazine.no
        <![CDATA[<]]> #{content_no})) and is_show = true
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, magazine.no DESC LIMIT 4
    </select>


    <select id="getCommunityQuestionsOrderByRecent" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY reg_datetime DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByViews" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY views DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByComments" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_comment WHERE question_no = q.no) as comment_count
        from question q
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY comment_count DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByLikes" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_like WHERE question_no = q.no) as like_count
        from question q
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY like_count DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByBookmarks" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_bookmark WHERE question_no = q.no) as bookmark_count
        from question q
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY bookmark_count DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByRecentReload" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_DATETIME = (select reg_datetime from question WHERE no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND q.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByViewsReload" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_VIEWS = (select views from question WHERE no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND q.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByCommentsReload" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_COMMENTS = (select COUNT(*) from question_comment WHERE question_no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_comment WHERE question_no = q.no) as comment_count
        from question q
        WHERE ((select COUNT(*) from question_comment WHERE question_no = q.no) <![CDATA[<]]> @LAST_COMMENTS OR
        ((select COUNT(*) from question_comment WHERE question_no = q.no) = @LAST_COMMENTS AND q.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByLikesReload" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_LIKES = (select COUNT(*) from question_like WHERE question_no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_like WHERE question_no = q.no) as like_count
        from question q
        WHERE ((select COUNT(*) from question_like WHERE question_no = q.no) <![CDATA[<]]> @LAST_LIKES OR
        ((select COUNT(*) from question_like WHERE question_no = q.no) = @LAST_LIKES AND q.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, q.no DESC LIMIT 4
    </select>
    <select id="getCommunityQuestionsOrderByBookmarksReload" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_BOOKMARKS = (select COUNT(*) from question_bookmark WHERE question_no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no,
        (select COUNT(*) from question_bookmark WHERE question_no = q.no) as bookmark_count
        from question q
        WHERE ((select COUNT(*) from question_bookmark WHERE question_no = q.no) <![CDATA[<]]> @LAST_BOOKMARKS OR
        ((select COUNT(*) from question_bookmark WHERE question_no = q.no) = @LAST_BOOKMARKS AND q.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, q.no DESC LIMIT 4
    </select>

    <insert id="insertBoard" parameterType="Board" keyProperty="no" useGeneratedKeys="true">
        insert into board(farm_no, title, content, reg_datetime, updated_datetime, views, category)
        VALUES (#{farm_no}, #{title}, #{content}, now(), now(), 0, #{category});
    </insert>
    <update id="updateBoard" parameterType="Board">
        update board
        set title=#{title},
            category=#{category},
            content=#{content},
            updated_datetime=now()
        where no = #{no}
          and farm_no = #{farm_no}
    </update>
    <insert id="insertQuestion" parameterType="Question" keyProperty="no" useGeneratedKeys="true">
        insert into question(farm_no, title, content, reg_datetime, updated_datetime, views, category)
        VALUES (#{farm_no}, #{title}, #{content}, now(), now(), 0, #{category});
    </insert>
    <update id="updateQuestion" parameterType="Question">
        update question
        set title=#{title},
            category=#{category},
            content=#{content},
            updated_datetime=now()
        where no = #{no}
          and farm_no = #{farm_no}
    </update>
    <insert id="insertTips" parameterType="Tips" keyProperty="no" useGeneratedKeys="true">
        insert into tips(farm_no, title, thumbnail, content, reg_datetime, updated_datetime, views, category)
        VALUES (#{farm_no}, #{title}, #{thumbnail, typeHandler=JsonObjectTypeHandler}, #{content}, now(), now(),
                #{views},
                #{category});
    </insert>
    <update id="updateTips" parameterType="Tips">
        update tips
        set title=#{title},
            category=#{category},
            content=#{content},
            updated_datetime=now(),
            thumbnail=#{thumbnail, typeHandler=JsonObjectTypeHandler}
        where no = #{no}
          and farm_no = #{farm_no}
    </update>
    <insert id="insertManual" parameterType="Manual" keyProperty="no" useGeneratedKeys="true">
        insert into manual(farm_no, title, thumbnail, content, reg_datetime, updated_datetime, views, category)
        VALUES (#{farm_no}, #{title}, #{thumbnail, typeHandler=JsonObjectTypeHandler}, #{content}, now(), now(),
                #{views},
                #{category});
    </insert>
    <update id="updateManual" parameterType="Manual">
        update manual
        set title=#{title},
            category=#{category},
            content=#{content},
            updated_datetime=now(),
            thumbnail=#{thumbnail, typeHandler=JsonObjectTypeHandler}
        where no = #{no}
          and farm_no = #{farm_no}
    </update>
    <insert id="insertMagazine" parameterType="Magazine" keyProperty="no" useGeneratedKeys="true">
        insert into magazine(title, thumbnail, content, reg_datetime, updated_datetime, is_show, category)
        VALUES (#{title}, #{thumbnail, typeHandler=JsonObjectTypeHandler}, #{content}, now(), now(), true, #{category});
    </insert>
    <update id="updateMagazine" parameterType="Magazine">
        update magazine
        set title=#{title},
            category=#{category},
            content=#{content},
            updated_datetime=now(),
            thumbnail=#{thumbnail, typeHandler=JsonObjectTypeHandler}
        where no = #{no}
    </update>
    <select id="getBoardSearchResult" resultType="Board">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from board WHERE no = #{last_content_no});
        </if>
        select *
        from board
        WHERE title like @QUERY
        OR content like @QUERY
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <select id="getTipsSearchResult" resultType="Tips" resultMap="Tips">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from tips WHERE no = #{last_content_no});
        </if>
        select *
        from tips
        WHERE title like @QUERY
        OR content like @QUERY
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <select id="getManualSearchResult" resultType="Manual" resultMap="Manual">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from manual WHERE no = #{last_content_no});
        </if>
        select *
        from manual
        WHERE title like @QUERY
        OR content like @QUERY
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <select id="getMagazineSearchResult" resultType="Magazine" resultMap="Magazine">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from magazine WHERE no = #{last_content_no});
        </if>
        select *
        from magazine
        WHERE title like @QUERY
        OR content like @QUERY AND is_show = true
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <select id="getQuestionSearchResult" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @QUERY = concat('%', #{query}, '%');
        <if test="last_content_no != 0">
            SET @LAST_DATETIME = (select reg_datetime from question WHERE no = #{last_content_no});
        </if>
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        WHERE title like @QUERY
        OR content like @QUERY
        <if test="last_content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{last_content_no}))
        </if>
        ORDER BY reg_datetime DESC, no DESC
    </select>
    <select id="getFarmBoards" resultType="Board">
        SET @LAST_DATETIME = (select reg_datetime
        from board
        WHERE no = #{content_no});
        select *
        from board
        WHERE farm_no = #{farm_no}
        <if test="content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{content_no}))
        </if>
        <if test="category neq null and category neq ''">
            AND category = #{category}
        </if>
        order by reg_datetime DESC, no DESC LIMIT 4
    </select>
    <select id="getFarmTips" resultType="Tips" resultMap="Tips">
        SET @LAST_DATETIME = (select reg_datetime
        from tips
        WHERE no = #{content_no});
        select *
        from tips
        WHERE farm_no = #{farm_no}
        <if test="content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{content_no}))
        </if>
        <if test="category neq null and category neq ''">
            AND category = #{category}
        </if>
        order by reg_datetime DESC, no DESC LIMIT 4
    </select>
    <select id="getFarmQuestions" resultType="QuestionSummary" resultMap="QuestionSummary">
        SET @LAST_DATETIME = (select reg_datetime
        from question
        WHERE no = #{content_no});
        select JSON_OBJECT(
        'no', q.no,
        'farm_no', q.farm_no,
        'title', q.title,
        'content', q.content,
        'thumbnail', q.thumbnail) as question,
        q.reg_datetime,
        (select cl.content
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment,
        (select cl.no
        from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
        from question_comment
        left join question_comment_like qcl on question_comment.no = qcl.comment_no
        WHERE question_no = q.no
        ORDER BY likes DESC, no) as cl
        LIMIT 1) as best_comment_no
        from question q
        WHERE farm_no = #{farm_no}
        <if test="content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{content_no}))
        </if>
        <if test="category neq null and category neq ''">
            AND category = #{category}
        </if>
        order by reg_datetime DESC, no DESC LIMIT 4
    </select>
    <select id="getFarmManuals" resultType="Manual" resultMap="Manual">
        SET @LAST_DATETIME = (select reg_datetime
        from manual
        WHERE no = #{content_no});
        select *
        from manual
        WHERE farm_no = #{farm_no}
        <if test="content_no != 0">
            AND (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND no
            <![CDATA[<]]> #{content_no}))
        </if>
        <if test="category neq null and category neq ''">
            AND category = #{category}
        </if>
        order by reg_datetime DESC, no DESC LIMIT 4
    </select>
    <select id="getContentFormByBoardNo" parameterType="int" resultType="ContentForm" resultMap="contentForm">
        select *
        from board
        where no = #{board_no};
    </select>
    <select id="getContentFormByQuestionNo" parameterType="int" resultType="ContentForm" resultMap="contentForm">
        select *
        from question
        where no = #{question_no};
    </select>
    <select id="getContentFormByMagazineNo" parameterType="int" resultType="ContentForm" resultMap="contentForm">
        select *
        from magazine
        where no = #{magazine_no};
    </select>
    <select id="getContentFormByManualNo" parameterType="int" resultType="ContentForm" resultMap="contentForm">
        select *
        from manual
        where no = #{manual_no};
    </select>
    <select id="getContentFormByTipNo" parameterType="int" resultType="ContentForm" resultMap="contentForm">
        select *
        from tips
        where no = #{tips_no};
    </select>
    <delete id="deleteBoard" parameterType="int">
        delete
        from board
        where no = #{community_no};
    </delete>
    <delete id="deleteQuestion" parameterType="int">
        delete
        from question
        where no = #{community_no};
    </delete>
    <delete id="deleteTip" parameterType="int">
        delete
        from tips
        where no = #{community_no};
    </delete>
    <delete id="deleteManual" parameterType="int">
        delete
        from manual
        where no = #{community_no};
    </delete>
    <update id="updateBoardBlockByCommentNo">
        update board_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
    <update id="updateQuestionBlockByCommentNo">
        update question_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
    <update id="updateTipBlockByCommentNo">
        update tips_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
    <update id="updateManualBlockByCommentNo">
        update manual_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
    <update id="updateMagazineBlockByCommentNo">
        update magazine_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
    <update id="updateFarmBlockByCommentNo">
        update farm_comment
        set is_blocked=#{block}
        where no = #{comment_no};
    </update>
</mapper>