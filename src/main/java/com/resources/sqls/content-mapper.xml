<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.ContentMapper">
    <resultMap id="Tips" type="com.model.content.tips.Tips">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Manual" type="com.model.content.manual.Manual">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="Magazine" type="com.model.content.magazine.Magazine">
        <result column="thumbnail" property="thumbnail" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <resultMap id="QuestionSummary" type="com.model.content.question.QuestionSummary">
        <result column="question" property="question" javaType="com.model.content.question.Question"
                typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <select id="getLiveBoards" resultType="Board">
        select *
        from board
        ORDER BY reg_datetime DESC
        LIMIT 16
    </select>
    <select id="getMainTips" resultType="Tips" resultMap="Tips">
        select *
        from tips
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainManuals" resultType="Manual" resultMap="Manual">
        select *
        from manual
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainMagazines" resultType="Magazine" resultMap="Magazine">
        select *
        from magazine
        ORDER BY rand(), views DESC
        LIMIT 8
    </select>
    <select id="getMainQuestions" resultType="QuestionSummary" resultMap="QuestionSummary">
        select JSON_OBJECT(
                       'no', q.no,
                       'farm_no', q.farm_no,
                       'title', q.title,
                       'content', q.content,
                       'thumbnail', q.thumbnail) as question,
               q.reg_datetime,
               (select cl.content
                from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
                      from question_comment
                               left join question_comment_like qcl on question_comment.no = qcl.comment_no
                      WHERE question_no = q.no
                      ORDER BY likes DESC, no) as cl
                LIMIT 1)                         as best_comment,
               (select cl.no
                from (select question_comment.no as no, content, COUNT(qcl.user_no) as likes
                      from question_comment
                               left join question_comment_like qcl on question_comment.no = qcl.comment_no
                      WHERE question_no = q.no
                      ORDER BY likes DESC, no) as cl
                LIMIT 1)                         as best_comment_no
        from questions as q
        ORDER BY reg_datetime DESC
        LIMIT 8
    </select>
    <select id="getBoard" parameterType="int" resultType="Board">
        select *
        from board
        where no = #{board_no};
    </select>
    <update id="updateBoardViews">
        update board
        SET views = views + 1
        WHERE board.no = #{board_no}
    </update>
    <select id="checkQuestionContentExists" resultType="_boolean">
        select EXISTS(select * from questions WHERE no = #{question_no})
    </select>
    <select id="getCommunityBoardsOrderByRecent" resultType="Board">
        select *
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY reg_datetime DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByViews" resultType="Board">
        select *
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY views DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByComments" resultType="Board">
        select *, (select COUNT(*) from board_comment WHERE board_no = board.no) as comment_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY comment_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByLikes" resultType="Board">
        select *, (select COUNT(*) from board_like WHERE board_no = board.no) as like_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY like_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByBookmarks" resultType="Board">
        select *, (select COUNT(*) from board_bookmark WHERE board_no = board.no) as bookmark_count
        from board
        <if test="category neq null and category neq '' ">WHERE category = #{category}</if>
        ORDER BY bookmark_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByRecentReload" resultType="Board">
        SET @LAST_DATETIME = (select reg_datetime from board WHERE no = #{content_no});
        select *
        from board
        WHERE (reg_datetime <![CDATA[<]]> @LAST_DATETIME OR (reg_datetime = @LAST_DATETIME AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY reg_datetime DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByViewsReload" resultType="Board">
        SET @LAST_VIEWS = (select views from board WHERE no = #{content_no});
        select *
        from board
        WHERE (views <![CDATA[<]]> @LAST_VIEWS OR (views = @LAST_VIEWS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY views DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByCommentsReload" resultType="Board">
        SET @LAST_COMMENTS = (select COUNT(*) from board_comment WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_comment WHERE board_no = board.no) as comment_count
        from board
        WHERE ((select COUNT(*) from board_comment WHERE board_no = board.no) <![CDATA[<]]> @LAST_COMMENTS OR ((select
        COUNT(*) from board_comment WHERE board_no = board.no) = @LAST_COMMENTS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY comment_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByLikesReload" resultType="Board">
        SET @LAST_LIKES = (select COUNT(*) from board_like WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_like WHERE board_no = board.no) as like_count
        from board
        WHERE ((select COUNT(*) from board_like WHERE board_no = board.no) <![CDATA[<]]> @LAST_LIKES OR ((select
        COUNT(*) from board_like WHERE board_no = board.no) = @LAST_LIKES AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY like_count DESC, board.no DESC LIMIT 4
    </select>
    <select id="getCommunityBoardsOrderByBookmarksReload" resultType="Board">
        SET @LAST_BOOKMARKS = (select COUNT(*) from board_bookmark WHERE board_no = #{content_no});
        select *, (select COUNT(*) from board_bookmark WHERE board_no = board.no) as bookmark_count
        from board
        WHERE ((select COUNT(*) from board_bookmark WHERE board_no = board.no) <![CDATA[<]]> @LAST_BOOKMARKS OR ((select
        COUNT(*) from board_bookmark WHERE board_no = board.no) = @LAST_BOOKMARKS AND board.no
        <![CDATA[<]]> #{content_no}))
        <if test="category neq null and category neq '' ">AND category = #{category}</if>
        ORDER BY bookmark_count DESC, board.no DESC LIMIT 4
    </select>
</mapper>